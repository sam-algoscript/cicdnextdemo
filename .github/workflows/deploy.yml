name: Deploy Next.js App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js App
        run: npm run build

      - name: Verify Build Output
        run: |
          echo "Current directory structure:"
          ls -la
          echo ".next directory contents:"
          ls -la .next || echo "❌ .next directory missing!"
          du -sh .next || exit 1

      - name: Create deployment package
        run: |
          mkdir -p deployment-package
          cp -r .next public package*.json deployment-package/
          echo "Package contents:"
          ls -la deployment-package

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: deployment-package/*
          retention-days: 5

  deploy:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: deployment-package

      - name: Verify Downloaded Files
        run: |
          echo "Downloaded artifacts:"
          ls -la deployment-package
          if [ ! -d "deployment-package/.next" ]; then
            echo "❌ Critical error: .next directory missing!"
            exit 1
          fi
          # Move files to workspace root
          mv deployment-package/* ./

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USER: ${{ secrets.SERVER_USER }}
          APP_DIR: ${{ secrets.APP_DIR || '/var/www/nextjs' }}
          PM2_APP_NAME: ${{ secrets.PM2_APP_NAME || 'next-app' }}
        run: |
          # Setup SSH
          echo "$SSH_PRIVATE_KEY" > deploy_key
          chmod 600 deploy_key
          mkdir -p ~/.ssh
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

          # Sync files with better error handling
          echo "Starting file sync..."
          rsync -avz --no-perms --no-owner --no-group --delete \
            -e "ssh -i deploy_key -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='.github' \
            --include='.next' \
            --include='public' \
            --include='package*.json' \
            --exclude='*' \
            ./ $USER@$SERVER_IP:$APP_DIR/

          # Remote deployment commands
          echo "Running remote deployment..."
          ssh -i deploy_key -o StrictHostKeyChecking=no $USER@$SERVER_IP <<EOF
            set -e
            cd $APP_DIR
            echo "Installing production dependencies..."
            npm ci --production
            echo "Restarting application..."
            pm2 delete $PM2_APP_NAME || true
            pm2 start npm --name "$PM2_APP_NAME" -- start
            pm2 save
            pm2 list
          EOF

          # Cleanup
          rm -f deploy_key
          echo "✅ Deployment completed successfully"